#!/usr/bin/env {{ interpreter }}
{% for opt in options -%}
#SBATCH {{ opt }}
{%- endfor %}

{% if debug %}
# Debugging
set -x
{% endif %}

# Set script variables
if [ -z "$SLURM_ARRAY_TASK_ID" ]; then
    FLEPI_SLOT_INDEX="1"
else
    FLEPI_SLOT_INDEX=$SLURM_ARRAY_TASK_ID
fi
export FLEPI_PATH={{ flepi_path }}
export PROJECT_PATH={{ project_path }}
export CONFIG_PATH={{ config_out }}

# Load modules
module purge
{% for module in cluster.modules -%}
{% if module.version is defined and module.version is not none -%}
module load {{ module.name }}/{{ module.version }}
{%- else -%}
module load {{ module.name }}
{%- endif %}
{%- endfor %}

# Path modifications
{% for path_export in cluster.path_exports -%}
if [ -r "{{ path_export.path }}" ]; then
    {% if path_export.prepend -%}
    export PATH={{ path_export.path }}:$PATH
    {%- else -%}
    export PATH=$PATH:{{ path_export.path }}
    {%- endif %}
elif [ "{{ path_export.error_if_missing }}" = "True" ]; then
    echo "The path '{{ path_export.path }}' does not exist but is required."
    exit 1
fi
{%- endfor %}

# Load conda env
conda activate {{ conda_env }}

# AWS setup

# Fetch/setup resume files

# Run inference
flepimop-calibrate --config $CONFIG_PATH \
    --project_path $PROJECT_PATH \
    --nslots {{ nslots }} \
    --niterations {{ niterations }} \
    --nthin {{ nthin }} \
    --jobs {{ jobs }} \
    --id {{ id }} \
    --prefix {{ prefix}} \
    --no-resume \
    --resume_location {{ resume_location }} > out.out 2>&1

# Upload/move results
