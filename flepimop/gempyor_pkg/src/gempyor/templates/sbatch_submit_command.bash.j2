{%- macro sbatch(arg, val) -%}
{%- if val is defined and val is not none -%}
#SBATCH --{{ arg }}="{{ val }}"
{% endif -%}
{%- endmacro -%}
#!/usr/bin/env bash
{{ sbatch("job-name", job_name) }}
{{- sbatch("comment", job_comment) }}
{{- sbatch("chdir", project_path) }}
{{- sbatch("time", job_time_limit) }}
{%- if job_resources_nodes is defined and job_resources_nodes is not none -%}
{%- if array_capable -%}
{{- sbatch("nodes", 1) }}
{{- sbatch("array", "1-{}".format(job_resources_nodes)) }}
{%- else -%}
{{- sbatch("nodes", job_resources_nodes) }}
{%- endif -%}
{%- endif -%}
{{- sbatch("ntasks", 1) }}
{{- sbatch("cpus-per-task", job_resources_cpus) }}
{{- sbatch("mem", job_resources_memory) }}
{%- if job_dependency is defined and job_dependency is not none -%}
{{- sbatch("dependency", "afterok:{}".format(job_dependency)) }}
{%- endif %}

{% if debug -%}
# Debugging
set -x
{%- endif %}

{% include "cluster_setup.bash.j2" with context %}

{% include "conda_activate.bash.j2" with context %}

{{ command }}
