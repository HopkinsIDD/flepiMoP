name: gempyor CI

on:
  workflow_dispatch:
  push:
    paths:
      - examples/**/*
      - flepimop/gempyor_pkg/**/*
    branches:
      - dev
  pull_request:
    types:
      - edited
      - opened
      - ready_for_review
      - reopened
      - synchronize
    paths:
      - examples/**/*
      - flepimop/gempyor_pkg/**/*
    branches:
      - dev
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.draft == false
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
        R-version: ["4.3"]
    steps:
      - name: Checkout flepiMoP
        uses: actions/checkout@v4
        with:
          lfs: true
          sparse-checkout: |
            *
            !documentation/
          sparse-checkout-cone-mode: false
          persist-credentials: false
      - name: Install flepiMoP
        uses: ./.github/actions/flepimop-install
        with:
          python-version: ${{ matrix.python-version }}
          R-version: ${{ matrix.R-version }}
      - name: Run doctests
        run: |
          conda activate venv/
          export FLEPI_PATH=$(pwd)
          cd flepimop/gempyor_pkg
          pytest --doctest-modules --exitfirst src/gempyor/
        shell: bash -el {0}
      - name: Run fast unit tests
        run: |
          conda activate venv/
          export FLEPI_PATH=$(pwd)
          cd flepimop/gempyor_pkg
          pytest -m "not slow" --exitfirst
        shell: bash -el {0}
      - name: Run slow unit tests
        run: |
          conda activate venv/
          export FLEPI_PATH=$(pwd)
          cd flepimop/gempyor_pkg
          pytest -m "slow" --exitfirst
        shell: bash -el {0}
      - name: Run gempyor-cli integration tests from examples
        run: |
          conda activate venv/
          cd examples
          pytest --exitfirst
        shell: bash -el {0}
  doc-updates:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.draft == false
    strategy:
      matrix:
        python-version: ["3.11"]
        R-version: ["4.3"]
    steps:
      - name: Checkout flepiMoP
        uses: actions/checkout@v4
        with:
          lfs: true
          sparse-checkout: |
            *
            !documentation/
          sparse-checkout-cone-mode: false
          persist-credentials: false
      - name: Install flepiMoP
        uses: ./.github/actions/flepimop-install
        with:
          python-version: ${{ matrix.python-version }}
          R-version: ${{ matrix.R-version }}
      - name: Build gempyor documentation with Sphinx
        run: |
          conda activate venv/
          export FLEPI_PATH=$(pwd)
          cd flepimop/gempyor_pkg/docs
          make fullbuild
        shell: bash -el {0}
      - name: Build click documentation with click-man
        run: |
          conda activate venv/
          export FLEPI_PATH=$(pwd)
          cd flepimop/gempyor_pkg
          click-man flepimop --target docs/cli_man --man-version 1
          python docs/click-man_parsing.py
        shell: bash -el {0}
      - name: Remove temporal metadata from man page headers
        run: |
          sed -i 's/^\(\.TH [^"]* \)"[^"]*" "\(.*\)"/\1"" "\2"/' flepimop/gempyor_pkg/docs/cli_man/*.1
      - name: Commit/push any changed docs
        run: |
          if [[ $(git status --porcelain flepimop/gempyor_pkg/docs/source/ | wc -l) -gt 0 || \
                $(git status --porcelain documentation/gitbook/how-to-run/click-commands/ | wc -l) -gt 0 ]]; then
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git add flepimop/gempyor_pkg/docs/source/
            git add documentation/gitbook/how-to-run/click-commands/
            git commit -m "auto-update Sphinx and click-man docs [ci skip]"
            git push origin "${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}"
          fi
        shell: bash
