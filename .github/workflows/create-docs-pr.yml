name: create-docs-pr

on:
  workflow_dispatch:
  schedule:
    - cron: '1 10 * * 1-5'

jobs:
  create-pr:
    runs-on: ubuntu-latest
    env:
      DOCS_BRANCH: documentation-gitbook
      PR_LABELS: 'documentation,high priority'
      PR_ASSIGNEES: 'emprzy,jcblemai,pearsonca,saraloo,TimothyWillard'
      PR_TITLE: 'Sync GitBook'
      OWNER: 'HopkinsIDD'
      REPO: 'flepiMoP'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0
      - name: Determine Commits Ahead/Behind
        run: |
          git fetch --all
          DOCS_AHEAD_MAIN=$( eval "git rev-list --count origin/main..origin/$DOCS_BRANCH -- documentation/" )
          DOCS_BEHIND_MAIN=$( eval "git rev-list --count origin/$DOCS_BRANCH..origin/main -- documentation/" )
          echo "DOCS_AHEAD_MAIN=$DOCS_AHEAD_MAIN" >> $GITHUB_ENV
          echo "DOCS_BEHIND_MAIN=$DOCS_BEHIND_MAIN" >> $GITHUB_ENV
      - name: Create PR If Needed
        uses: actions/github-script@v7
        id: create-pr
        with:
          result-encoding: string
          retries: 2
          script: |
            const { DOCS_AHEAD_MAIN, DOCS_BEHIND_MAIN, DOCS_BRANCH, PR_LABELS, PR_ASSIGNEES, PR_TITLE, OWNER, REPO } = process.env
            const prLabels = PR_LABELS.split(",")
            const prAssignees = PR_ASSIGNEES.split(",")
            const cc = prAssignees.map(x => "@" + x).join(", ")
            const docsAheadMain = parseInt(DOCS_AHEAD_MAIN, 10)
            const docsBehindMain = parseInt(DOCS_BEHIND_MAIN, 10)
            if (isNaN(docsAheadMain) || isNaN(docsBehindMain)) {
              throw new Error(`Cannot convert either "${DOCS_AHEAD_MAIN}" or "${DOCS_BEHIND_MAIN}" to integers.`)
            }
            const initialResults = await github.rest.search.issuesAndPullRequests({ 
              q: `owner:${OWNER} repo:${REPO} is:open is:pr in:title '${PR_TITLE}'`
            })
            let count = initialResults.data.total_count
            console.log(`${DOCS_BRANCH} is ${docsAheadMain} ahead, ${docsBehindMain} behind main. The open PR count is ${count}.`)
            async function deletePRs() {
              initialResults.data.items.forEach((item) => {
                github.rest.pulls.update({
                  owner: OWNER,
                  repo: REPO,
                  pull_number: item.number,
                  state: "closed"
                })
              })
            }
            async function createPR({ from, to, body }) {
              let prBody = `cc: ${cc}.`
              if (body !== null) {
                prBody = `${body} ${prBody}`
              }
              const today = (new Date()).toLocaleDateString()
              const pr = await github.rest.pulls.create({
                owner: OWNER,
                repo: REPO,
                head: from,
                base: to,
                title: `${today} ${PR_TITLE} From ${from} Into ${to}`,
                body: prBody
              })
              const labels = await github.rest.issues.addLabels({
                owner: OWNER,
                repo: REPO,
                issue_number: pr.data.number,
                labels: prLabels
              })
              const assignees = await github.rest.issues.addAssignees({
                owner: OWNER,
                repo: REPO,
                issue_number: pr.data.number,
                assignees: prAssignees
              })
              return pr.data.number
            }
            if (docsAheadMain > 0 && docsBehindMain > 0) {
              // Need PRs both ways
              if (count !== 2 && count > 0) {
                // Previously opened PRs (i.e. only going one way) to be closed
                deletePRs()
                count = 0;
              }
              if (count !== 2) {
                // There aren't the 2 expected PRs open, open them
                const docsIntoMainPrNumber = await createPR({
                  from: DOCS_BRANCH,
                  to: "main",
                  body: null
                })
                const mainIntoDocsPrNumber = await createPR({
                  from: "main",
                  to: DOCS_BRANCH,
                  body: `Blocked by GH-${docsIntoMainPrNumber}.`
                })
              }
            } else if (docsAheadMain > 0) {
              // Need a PR from docs to main
              if (count > 1) {
                // 2 or more PRs, likely stale
                deletePRs()
                count = 0;
              } else if (count === 1) {
                let title = initialResults.data.items[0].title
                if (!title.includes(`${PR_TITLE} From ${DOCS_BRANCH} Into main`)) {
                  // A PR that does not match the expected direction, stale
                  deletePRs()
                  count = 0;
                }
              }
              if (count !== 1) {
                // There isn't the 1 expected PR, open it
                const docsIntoMainPrNumber = await createPR({
                  from: DOCS_BRANCH,
                  to: "main",
                  body: null
                })
              }
            } else if (docsBehindMain > 0) {
              // Need a PR from main to docs
              if (count > 1) {
                // 2 or more PRs, likely stale
                deletePRs()
                count = 0
              } else if (count === 1) {
                let title = initialResults.data.items[0].title
                if (!title.includes(`${PR_TITLE} From main Into ${DOCS_BRANCH}`)) {
                  // A PR that does not match the expected direction, stale
                  deletePRs()
                  count = 0
                }
              }
              if (count !== 1) {
                // There isn't the 1 expected PR, open it
                const mainIntoDocsPrNumber = await createPR({
                  from: "main",
                  to: DOCS_BRANCH,
                  body: null
                })
              }
            } else if (count > 0) {
              // Ahead/behind commits is 0 but there are stale PRs to close
              deletePRs()
            }
